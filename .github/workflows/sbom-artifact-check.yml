# Read repodata.json
# For every package, check whether the sbom artifact is there in:
#  https://repo.anaconda.cloud/repo/t/<anaconda cloud token>/community_testing/sboms/index.json
#
# and has a valid sbom definition:
#  https://repo.anaconda.cloud/repo/t/<anaconda cloud token>/community_testing/sboms/<package_name>-<package_version>-<package_build_string>.<package_ext>.spdx.json
#

name: "SBOM artifact check"
on:
  schedule:
    - cron: 0 */6 * * *
  workflow_dispatch: {}
permissions: write-all

jobs:
  artifact-check:
    defaults:
      run:
        shell: bash -l {0}
    strategy:
      matrix:
        architecture:
          - 'noarch'
          - 'linux-64'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@24cb9080177205b6e8c946b17badbe402adc938f # v3

      - name: Create Conda environment
        uses: mamba-org/setup-micromamba@5d5dbebd87f7b9358c403c7a66651fa92b310105 #v1.4.1
        with:
          environment-name: sbom-artifact-check
          cache-downloads: true
          log-level: warning
          condarc: |
            channels:
              - conda-forge
          create-args: >-
            python=3.9
            yq                  

      - name: Get repodata packages
        id: repodata_packages
        run: |          
          repodata=$(curl -s https://repo.anaconda.cloud/repo/t/$ANACONDA_BUSINESS_TOKEN/community_testing/${{ matrix.architecture }}/repodata.json)          
          repodata_packages=$(echo "$repodata" | yq '.packages | keys | join(",")')
          echo "repodata_packages=$repodata_packages" >> $GITHUB_OUTPUT
          echo "repodata_packages_count=$(echo "$repodata" | yq '.packages | keys | length')" >> $GITHUB_OUTPUT
        env:
          ANACONDA_BUSINESS_TOKEN: ${{ secrets.ANACONDA_BUSINESS_TOKEN }}

      - name: Get sbom index paths
        id: sbom_index_paths
        run: |          
          sbom_data=$(curl -s https://repo.anaconda.cloud/repo/t/$ANACONDA_BUSINESS_TOKEN/community_testing/sboms/index.json)
          sbom_index_paths=$(echo "$sbom_data" | yq '.paths | keys | join(",")') 
          echo "sbom_index_paths=$sbom_index_paths" >> $GITHUB_OUTPUT
          echo "sbom_index_paths_count=$(echo "$sbom_data" | yq '.paths | keys | length')" >> $GITHUB_OUTPUT
        env:
          ANACONDA_BUSINESS_TOKEN: ${{ secrets.ANACONDA_BUSINESS_TOKEN }}

      - name: Match Packages Index
        id: match_packages
        run: |
          not_found_packages=()
          for repo_package in ${REPODATA_PACKAGES//,/ }; do
            
            # remove double quote characters from package name
            repo_package=${repo_package//\"/}
          
            not_found=1
                      
            for sbom_index_path in ${SBOM_INDEX_PATHS//,/ }; do
          
              # check whether the package name is in the index path
              if [[ $sbom_index_path == *$repo_package* ]]; then
                echo "Adding $repo_package to found"
                not_found=0
                break;
              fi 
            done
          
            if [[ $not_found == 1 ]]; then
              echo "Adding $repo_package to not found"
              not_found_packages+=("$repo_package")
            fi
          done                  
          
          not_found_packages_str=$(IFS=,; echo "${not_found_packages[*]}")
          echo "not_found_packages=$not_found_packages_str" | tr -d '"' >> $GITHUB_OUTPUT
          echo "not_found_packages_count=${#not_found_packages[@]}" >> $GITHUB_OUTPUT
        env:
          REPODATA_PACKAGES: ${{ steps.repodata_packages.outputs.repodata_packages }}
          SBOM_INDEX_PATHS: ${{ steps.sbom_index_paths.outputs.sbom_index_paths }}

      - name: Check Index Paths
        id: index_path_check
        run: |
          # In order to determine whether the sbom exists, do a sanity check on each of the sbom index paths
          # by going to that sbom file and checking the name field matches the index path
          no_name_sboms=()
          for sbom_index_path in ${SBOM_INDEX_PATHS//,/ }; do
            sbom_data=$(curl -s https://repo.anaconda.cloud/repo/t/$ANACONDA_BUSINESS_TOKEN/community_testing/sboms/${sbom_index_path})
            sbom_name=$(echo "$sbom_data" | yq '.name' | tr -d '"')
            if [[ "$sbom_index_path" != "$sbom_name" ]]; then
              no_name_sboms+=("$sbom_index_path")
            fi
          done
          no_name_sboms_str=$(IFS=,; echo "${no_name_sboms[*]}")
          echo "no_name_sboms=$no_name_sboms_str" | tr -d '"' >> $GITHUB_OUTPUT
          echo "no_name_sboms_count=${#no_name_sboms[@]}" >> $GITHUB_OUTPUT
        env:
          SBOM_INDEX_PATHS: ${{ steps.sbom_index_paths.outputs.sbom_index_paths }}
          ANACONDA_BUSINESS_TOKEN: ${{ secrets.ANACONDA_BUSINESS_TOKEN }}

      - name: Send SBOM Not Found Event
        uses: masci/datadog@v1
        if: ${{ steps.match_packages.outputs.not_found_packages }} != ""
        with:
          api-key: ${{ secrets.DATADOG_API_KEY }}
          events: |
            - title: "Community Repo SBOM Not Found"
              text: "The SBOM path was not found for repodata packages: ${{ steps.match_packages.outputs.not_found_packages }} with architecture: ${{ matrix.architecture }}"
              alert_type: "error"
              host: ${{ github.repository_owner }}
              tags:
                - "@github.org:anaconda-community"
                - architecture: ${{ matrix.architecture }}

      - name: Send SBOM Index Name Mistmatch Event
        uses: masci/datadog@v1
        if: ${{ steps.index_path_check.outputs.no_name_sboms }} != ""
        with:
          api-key: ${{ secrets.DATADOG_API_KEY }}
          events: |
            - title: "Community Repo SBOM Index Name Mismatch"
              text: "The SBOM name was not found at the sbom path location: ${{ steps.index_path_check.outputs.no_name_sboms }} with architecture: ${{ matrix.architecture }}"
              alert_type: "error"
              host: ${{ github.repository_owner }}
              tags:
                - "@github.org:anaconda-community"
                - architecture: ${{ matrix.architecture }}

      - name: Send SBOM Metrics
        uses: masci/datadog@v1
        with:
          api-key: ${{ secrets.DATADOG_API_KEY }}
          metrics: |
            - type: "count"
              name: "community.repo.${{ matrix.architecture }}.packages.count"
              value: ${{ steps.repodata_packages.outputs.repodata_packages_count }}
              tags:          
                - "@github.org:anaconda-community"
            
            - type: "count"
              name: "community.repo.${{ matrix.architecture }}.sbom.paths.count"
              value: ${{ steps.sbom_index_paths.outputs.sbom_index_paths_count }}
              tags:          
                - "@github.org:anaconda-community"
            
            - type: "count"
              name: "community.repo.${{ matrix.architecture }}.sbom.not_found_packages.count"
              value: ${{ steps.match_packages.outputs.not_found_packages_count }}
              tags:          
                - "@github.org:anaconda-community"