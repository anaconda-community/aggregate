name: "Update repo"
on:
  schedule:
    - cron: 0 */6 * * *
  workflow_dispatch: {}
permissions: write-all

jobs:
  update-repo:
    defaults:
      run:
        shell: bash -l {0}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@24cb9080177205b6e8c946b17badbe402adc938f # v3

      - name: Create Conda environment
        uses: mamba-org/provision-with-micromamba@main
        with:
          environment-file: environment.yml
          environment-name: agg
          cache-downloads: true
          cache-env: true
          extra-specs: |
            python=3.9

      - name: Get feedstocks
        id: feedstocks
        run: |
          echo "feedstocks=$(yq '(.feedstocks | keys | join(","))' manifest.yaml | sed 's/"//g')" >> $GITHUB_OUTPUT            

      - name: Sync forks
        run: |          
          for feedstock in ${FEEDSTOCKS//,/ }; do
            parent=$(gh repo view anaconda-community/$feedstock --json parent | yq '.parent')
            if [[ $parent != "null" ]]; then
              gh repo sync anaconda-community/$feedstock
            fi
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          FEEDSTOCKS: ${{ steps.feedstocks.outputs.feedstocks }}

      - name: Update manifest
        id: manifest
        run: |
          branch=$(date +updatefeedstocks%Y%m%d%H%M%S)
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"
          git checkout -b $branch
          
          for feedstock in ${FEEDSTOCKS//,/ }; do
            hash=$(git ls-remote https://github.com/anaconda-community/${feedstock}.git | head -n1 | awk '{print $1;}')            
            abs aggregate add --branch main --commit ${hash} ${feedstock}
          done
          
          yq --yaml-output --in-place . manifest.yaml
          git add manifest.yaml
          git commit -m "update feedstocks" && git push --set-upstream origin $branch && echo "createpr=true" >> $GITHUB_OUTPUT
        env:
          FEEDSTOCKS: ${{ steps.feedstocks.outputs.feedstocks }}

      - name: Open PR
        if: ${{ steps.manifest.outputs.createpr == 'true' }}
        run: gh pr create --fill
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
